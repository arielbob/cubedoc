//TODO: maybe rename these classes so that the type is the first word
//ex: card-main and card-step instead of main-card or step-card
//i.e. same format as the button classes
//TODO: replace $nav-background with $white
//TODO: figure out how to organize css better

.card {
	box-shadow: 0 5px 10px 0 rgba(#000000, 0.06);
}

// .card:not(:last-child) {
//   margin-right: $gutter;
// }

.main-card {
  overflow: hidden;
  height: $card-height;
  border-radius: 0 0 $card-border-radius $card-border-radius;
  margin-bottom: 40px;
  transition: all 0.4s $losi;
  &.red {
    .main-label {
      background-color: $main-red;
			background-image: url('/images/cards/3x3.png');
			background-repeat: no-repeat;
			background-position: -160px 70px;
    }
    .content {
      border-color: $main-red;
      .content-inner {
        a { //0-4-1
          color: $main-red;
        }
      }
    }
  } // these color styles should come before default styles bc. of equal specificity w/ a:hover styles
  &.blue {
    .main-label {
      background-color: $main-blue;
			background-image: url('/images/cards/4x4.png');
			background-repeat: no-repeat;
			background-position: -160px 70px;
    }
    .content {
      border-color: $main-blue;
      .content-inner {
        a {
          color: $main-blue;
          &:hover {
          }
        }
      }
    }
  }
  &:hover {
    transform: translateY(-6px);
    box-shadow: 0 5px 10px 0 rgba(#000000, 0.06);
  }
  .main-label {
    overflow: hidden;
    float: left;
    width: 300px;
    height: 100%;
    // margin-top: $card-gutter;
    .main-title {
      position: relative;
      line-height: 0.8;
      top: 20px;
      left: 60px;
      margin: 0;
      color: #ffffff;
      font-size: 160px;
    }
  }
  .content {
    display: flex;
    min-height: 100%;
    padding: $card-gutter;
    border-bottom: 3px solid #000000;
    background-color: #ffffff;
    .content-inner {
      flex: 1 0;
      &:not(:last-of-type) {
        padding-right: $card-gutter;
      }
      .btn-main {
        display: inline-block;
        width: 130px;
        &:hover {
          transform: none;
        }
      }
    }
  }
}

@media only screen and (max-width: $breakpoint) {
	.main-card {
		&.red {
			.main-label {
				background-position: -160px 10px;
			}
		}
		&.blue {
			.main-label {
				background-position: -160px 10px;
			}
		}
	}
}

a.link-main {
  display: inline-block;
  margin-bottom: 5px;
  text-decoration: none;
  font-weight: bold;
  transition: transform 0.1s $losi;
  position: relative;
  z-index: 0;
  span {
    transition: all 0.1s $losi;
  }
  .arrow {
    margin-left: 10px;
  }
  .underline {
    display: block;
    position: absolute;
    bottom: 0;
    width: 100%;
    height: 10px;
    background-color: rgba(#ffe38f, 0.27);
    opacity: 1;
    z-index: -1;
    transition: all 0.2s $losi;
  }
  &:hover { // 0-4-1
    // color: $link-blue;
    &:not(span) {
      transform: translateX(2px);
    }
    .arrow {
      margin-left: 20px;
    }
    .underline {
      opacity: 0;
    }
  }
}

@media only screen and (max-width: $breakpoint-lg) {
  .main-card, .main-card .main-label, .main-card .content {
    height: 250px;
  }
}

@media only screen and (max-width: $breakpoint) {
  .main-card {
    height: auto;
    min-height: 0;
    margin-bottom: $gutter;
    .main-label {
      width: 100%;
      height: 120px;
      .main-title {
        text-align: right;
        top: 0;
        left: auto;
      }
    }
    .content {
      flex-direction: column;
      height: auto;
      border-top: none;
      .content-inner:not(:last-child) {
        margin-bottom: $gutter;
        padding: 0;
      }
      .content-inner {
        .btn-main {
          width: 100%;
          height: 40px;
          line-height: 34px;
        }
      }
    }
  }
}

.instructions {
  margin-top: $content-margin;
}

.step-card {
  background-color: $nav-background;
  border-radius: 0 0 $card-border-radius $card-border-radius;
  border-top: 3px solid #000000;
  padding: $card-gutter;
  h3 {
    margin-top: 0;
  }
  :last-child {
    margin-bottom: 0;
  }
}

.img-card {
	display: flex;
	flex-direction: column;
	justify-content: space-between;
  background-color: $nav-background;
  border-radius: $card-border-radius;
  overflow: hidden;
	text-align: center;
	max-height: 280px;
  .caption {
    align-self: flex-end;
    color: $nav-background;
		width: 100%;
    padding: 5px;
    text-align: center;
  }
	&:not(:last-child) {
		margin-right: $gutter;
	}
	& > img {
		display: block;
		max-width: 80%;
		height: auto;
		margin: $img-padding auto $img-padding;
		object-fit: contain;
	}
}

.algorithms {
	.row {
		margin-top: -$gutter;
	}
	.row .img-card {
		flex-grow: 0;
		flex-shrink: 0;
		flex-basis: auto;
		width: 200px;
		margin-top: $gutter;
	}
}

@media only screen and (max-width: $breakpoint-lg) {
	.algorithms {
		.row .img-card {
			flex-basis: 160px;
		}
	}
}

@media only screen and (max-width: $breakpoint) {
	.algorithms {
		.row .img-card {
			flex-basis: 100%;
		}
		.step-card {
			position: sticky;
			top: 0;
		}
	}
}
